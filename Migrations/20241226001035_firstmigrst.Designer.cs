// <auto-generated />
using System;
using Clinic.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Clinic.Migrations
{
    [DbContext(typeof(Appdp))]
    [Migration("20241226001035_firstmigrst")]
    partial class firstmigrst
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Clinic.Models.Entites.Appoinment", b =>
                {
                    b.Property<int>("Appoinmentid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Appoinmentid"));

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Patinett")
                        .HasColumnType("int");

                    b.Property<int>("doctorid")
                        .HasColumnType("int");

                    b.HasKey("Appoinmentid");

                    b.HasIndex("Patinett");

                    b.HasIndex("doctorid");

                    b.ToTable("Appoinments");
                });

            modelBuilder.Entity("Clinic.Models.Entites.Doctor", b =>
                {
                    b.Property<int>("DoctorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DoctorId"));

                    b.Property<string>("DoctorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Specialty")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DoctorId");

                    b.ToTable("Doctors");
                });

            modelBuilder.Entity("Clinic.Models.Entites.Patinet", b =>
                {
                    b.Property<int>("PatientsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PatientsId"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("PatientName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PatientsId");

                    b.ToTable("Patches");
                });

            modelBuilder.Entity("Clinic.Models.Entites.Appoinment", b =>
                {
                    b.HasOne("Clinic.Models.Entites.Patinet", "Patinet")
                        .WithMany("AppoinmentList")
                        .HasForeignKey("Patinett")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Clinic.Models.Entites.Doctor", "Doctor")
                        .WithMany("AppoinmentList")
                        .HasForeignKey("doctorid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doctor");

                    b.Navigation("Patinet");
                });

            modelBuilder.Entity("Clinic.Models.Entites.Doctor", b =>
                {
                    b.Navigation("AppoinmentList");
                });

            modelBuilder.Entity("Clinic.Models.Entites.Patinet", b =>
                {
                    b.Navigation("AppoinmentList");
                });
#pragma warning restore 612, 618
        }
    }
}
